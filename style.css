*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --first-color: black;
    --cell-size: 80px;
    --mark-size: calc(var(--cell-size)*.8)
}

body {
    width: 100vw;
    height: 100vh;
    display: grid;
    place-items: center;
    font-family: 'IBM Plex Mono', monospace;
    text-align: center;
}

button {
    font-family: 'IBM Plex Mono', monospace;
    background-color: var(--first-color);
    border: none;
    color: white;
    padding: .5em .75em;
    font-size: 1em;
    text-align: center;
    text-decoration: none;
}

.container {
    margin: 1em 0;
    ;
    border: var(--first-color) solid 2.5px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    max-height: 900px;
    max-width: 900px;
    width: 60vw;
    height: 85vh;
}

.display-cover {
    /* this is a class that I use to cover the whole container
        ex.winning banner or login form */
    position: absolute;
    z-index: 100;
    height: 100%;
    width: 100%;
}

/* login */

#login-container-bg {
    display: grid;
    place-items: center;
    background: rgba(0, 0, 0, .9)
}

.login-container {
    max-width: 300px;
    max-height: 500px;
    color: var(--first-color);
    background-color: white;
    text-align: center;
    display: flex;
    flex-direction: column;
    row-gap: 1em;
    padding: 2em;
}

#error {
    font-size: .75em;
}

#form {
    padding: 1em 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 1.5em;
}

.player-input {
    width: 100%;
    border: solid var(--first-color);
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: left;
}

.player-input input {
    border: solid var(--first-color);
    width: 70%;
    height: 2em;
    padding: 1.25em 0.5em;
    border: none
}

#submit-btn {
    width: 40%;
}

.no-display {
    display: none !important;
}

/* game */

.players-table {
    display: flex;
    width: 80%;
    margin-inline: auto;
    justify-content: space-around;
}

h2 {
    font-size: 1rem;
}

.board {
    width: 100%;
    display: grid;
    place-items: center;
    place-content: center;
    grid-template-columns: repeat(3, auto);
}

/* game btns  */
.game-btns-container {
    width: calc(var(--cell-size)*3);
    margin-inline: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 1.5em;
}

#reset-btn,
#new-game-btn {
    width: 50%;
    background-color: var(--first-color);
}


/* cell c and circle  */

.cell {
    /* change width if necessary */
    width: var(--cell-size);
    aspect-ratio: 1;
    background-color: white;
    border: 1px solid var(--first-color);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}


.board .cell {
    cursor: pointer;
}

.board .cell.x,
.board .cell.circle {
    cursor: not-allowed;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8) {
    border-bottom: none;
}

.cell:nth-child(3n+1) {
    border-left: none;
}

.cell:nth-child(3n) {
    border-right: none;
}


.cell.x::before,
.cell.x::after,
.board.x .cell:not(.circle):not(.x):hover::before,
.board.x .cell:not(.circle):not(.x):hover::after {
    position: absolute;
    content: '';
    aspect-ratio: .18;
    height: 80%;
    background-color: var(--first-color);
}

.board.x .cell:not(.circle):not(.x):hover::before,
.cell.x::before {
    transform: rotate(45deg);
}

.board.x .cell:not(.circle):not(.x):hover:after,
.cell.x::after {
    transform: rotate(-45deg);
}

.board.circle .cell:not(.circle):not(.x):hover::before,
.board.circle .cell:not(.circle):not(.x):hover::after,
.cell.circle::before,
.cell.circle::after {
    position: absolute;
    content: '';
    border-radius: 50%;
}

.board.circle .cell:not(.circle):not(.x):hover::before,
.cell.circle:before {
    aspect-ratio: 1;
    width: 80%;
    background-color: var(--first-color);
}

label.cell.circle:before {
    width: 90%;
}

.board.circle .cell:not(.circle):not(.x):hover::after,
.cell.circle:after {
    aspect-ratio: 1;
    width: 50%;
    background-color: white;
}

.board.x .cell:not(.circle):not(.x):hover::before,
.board.x .cell:not(.circle):not(.x):hover::after,
.board.circle .cell:not(.circle):not(.x):hover::before,
.board.circle .cell:not(.circle):not(.x):hover::after {
    filter: brightness(1.75)
}

.board.circle .cell:not(.circle):not(.x):hover::after {
    background-color: white;
}

/* label cell x and circle */

label.cell.x::before,
label.cell.x::after {
    aspect-ratio: .25;
}

label.cell {
    margin-left: .5em;
    border: none;
    height: 1.5rem;
    width: 1.5rem;
}


/* winning message  */

#winning-message {
    background-color: rgba(0, 0, 0, .9);
    justify-content: center;
    align-items: center;
    flex-direction: column;
    color: white;
    font-size: 1.5rem;
    row-gap: 1em;
}

#restart-btn {
    background-color: white;
    color: var(--first-color);
}

#winning-message.show {
    display: flex;
}